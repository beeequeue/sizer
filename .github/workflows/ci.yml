on:
  push:
    branches:
      - main
  pull_request:

name: CI

jobs:
  build:
    strategy:
      matrix:
        matrix:
          - runner: ubuntu-24.04
            name: sizer-x64-linux
          - runner: macos-15
            name: sizer-arm64-mac
          - runner: windows-2025
            name: sizer-x64-win.exe

    runs-on: ${{ matrix.matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        shell: sh
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - run: pnpm build

      - run: pnpm publint

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.matrix.name }}
          path: dist-exec/sizer-*
          if-no-files-found: error
          retention-days: 1

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: npm i -g corepack

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: npm i -g corepack

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - run: pnpm typecheck

  changesets:
    runs-on: ubuntu-latest
    needs: [build, lint, typecheck]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: npm i -g corepack

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - uses: actions/cache@v4
        with:
          path: ~/.pkg-cache
          key: v1-${{ runner.os }}-pkg-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pkg-

      - name: Install dependencies
        run: pnpm i --development --frozen-lockfile

      - name: Update release PR / Publish packages to `npm`
        id: changesets
        uses: changesets/action@v1
        with:
          title: Release
          commit: Release new version
          publish: pnpm changeset publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: actions/download-artifact@v4
        if: ${{ steps.changesets.outputs.published == 'true' }}
        with:
          path: dist-exec/

      - name: Upload binaries to release
        if: ${{ steps.changesets.outputs.published == 'true' }}
        run: gh release upload --clobber $(git tag) dist-exec/*
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
